.modal-dialog.modal-lg
  .modal-content.vertical-center
    = simple_form_for @charge do |f|
      .modal-body.text-center
        .multi-part-form.block1.show
          .row
            .col-xs-12
              %h2.modal-header-text
                who are you paying and what is it for?
                %br
                %small step 1 of 2

          .row
            .col-md-8.col-md-offset-2.col-sm-12
              %p.form-errors.form-errors-1

              .row
                .col-md-6= f.input :merchant_name, label: "name of company"
                .col-md-6= f.input :merchant_website, label: "company website"
                .col-xs-12= f.input :description, as: :string, label: "what's the charge for?"

              %button{ type: "button", class: "btn btn-default", data: {dismiss: "modal"} } Cancel
              %button.next{ type: "button", class: "btn btn-primary", data: {current_block: "1", next_block: "2"} } Next

        .multi-part-form.block2.hidden
          %h2.modal-header-text
            when was the last charge and how much do you usually pay?
            %br
            %small step 2 of 2

          %ul.list-unstyled.form-errors.form-errors-2

          .row
            .col-md-4.col-xs-7= f.input :last_date_billed, as: :string, label: "when was your last charge?"
            .col-md-3.col-xs-5= f.input :amount, as: :currency, label: "how much was it?"
            .col-md-5.col-xs-12
              .form-group#renewal-period-selects
                = f.input :renewal_period_in_words, collection: Charge.renewal_period_in_words.to_h.invert, selected: 4, label: "how often are you charged?", wrapper: false
                = f.input :renewal_period_in_weeks, as: :integer, label: false, placeholder: "charging frequency in weeks", wrapper: false
          %button.btn.btn-default{ type: "button", data: {dismiss: "modal"} } Cancel
          %button.btn.btn-default.next{ type: "button", data: {current_block: "2", next_block: "1"} } Back
          = f.button :submit, "Save", class: "btn btn-primary"

          %h5#error-reminder{style: "color: red;"}

:javascript

  //prevent enter from submitting form
  $('#new_charge').find('.input').keypress(function(e){
    if ( e.which == 13 ) { return false; } // Enter key = keycode 13
  });

  //hide errors
  function hide_form_errors() {
    $('.form-errors').html("");
    $('.form-group').removeClass('has-error');
  }

  //autofill website from name
  function updateMerchantWebsiteText(website) {
    if( typeof website == 'string' ) {
      $("#charge_merchant_website").css("color", "#fff");
      $("#charge_merchant_website")[0].value = website;
      $("#charge_merchant_website").animate({ color: "#66afe9" }, 300 );
      $("#charge_merchant_website").animate({ color: "#000" }, 2000 );
    }
  }

  function is_valid_url(url) {
    return url.match(/^((ftp|http|https):\/\/)?([a-zA-Z0-9]+(\.[a-zA-Z0-9]+)+.*)$/);
  };

  function is_valid_currency(amount) {
    var present = !(amount == "");
    var valid = amount.match(/^\$?([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{0,2})?|[1-9]{1}[0-9]{0,}(\.[0-9]{0,2})?|0(\.[0-9]{0,2})?|(\.[0-9]{1,2})?)$/);
    return (valid && present);
  };

  function is_valid_date(date) {
    return date.match(/^\d{4}-\d{2}-\d{2}$/)
  };

  //BEGIN: merchant website validation
  function error_button_flash(button) {
    //flash button red
    button.css("background-color", "red");
    button.css("border-color", "red");
    button.css("color", "#fff");
    button.css("outline", "none");
    button.animate({ backgroundColor: "#088bff" }, {queue: false, duration: 1000});
    button.animate({ borderColor: "#088bff" }, {queue: false, duration: 1000}); 
  };

  function remove_error_reminder_if_form_valid() {
    if( !($("#charge-date-error").length) && !($("#amount-error").length) ) { $('#error-reminder').text("") }
  }

  //set page title
  $('#modal-container').on('hidden.bs.modal', function (e) {
    $('title').html("trym.io | charges")
  });

  //charge category popover
  $('#charge_merchant_name').popover({ toggle: "popover", title: "Forgetting anything?", content: "<ul class='popover-list'><li>Insurance</li><li>Credit Card Membership</li><li>Bank or Investment Accounts</li><li>Online Shopping</li><li>TV, Movies, and Internet</li><li>Utility Companies</li><li>Websites</li><li>Magazines or Journals</li></ul>", html: true, trigger: "focus", placement: "left" })

  //intialize jqueryui date-picker
  $('#charge_last_date_billed').datepicker({dateFormat: 'yy-mm-dd'});

  $("#charge_merchant_website").change(function() {
    if( is_valid_url( $(this)[0].value ) || $(this)[0].value == '' ) {
      $('#charge_merchant_website').parent().removeClass('has-error');
      if( !($(this)[0].value == '') ) { $('#charge_merchant_name').parent().removeClass('has-error'); }; 
      $('.form-errors-1').text('');
    } else {
      $('#charge_merchant_website').parent().addClass('has-error');
      $('.form-errors-1').text(''); //just incase!
      $('.form-errors-1').text("the website you entered looks invalid - please correct it before continuing");
    }
  });
  //END: merchant website validation

  //any merchant name should be acceptable
  $("#charge_merchant_name").change(function() {
    if( !($(this)[0].value == '') ) { hide_form_errors() }
  });

  //BEGIN: form-part-1 error handler
  $('.next').on('click', function () {
    var current = $(this).data('currentBlock');
    var next = $(this).data('nextBlock');
    
    var website = $("#charge_merchant_website")[0].value
    var website_present = !( website == '' )
    var website_valid_or_empty = ( is_valid_url(website) || !website_present )
    var name_present =  !( $("#charge_merchant_name")[0].value == '' )

    if( ( website_present || name_present ) && website_valid_or_empty ) {
    
      //show the next block
      $('.block' + current).removeClass('show').addClass('hidden');
      $('.block' + next).removeClass('hidden').addClass('show');
      
      hide_form_errors();
    
    } else {
      
      error_button_flash( $(this) )

      //if the website is invalid the error should already be showing
      if( !website_present ) {
        $('.form-errors-1').text('') //just incase!
        $('.form-errors-1').text("please enter a company name or valid company website to continue")
        $('#charge_merchant_name').parent().addClass('has-error');
        $('#charge_merchant_website').parent().addClass('has-error');
      }
    
    }
  });
  //END: form-part-1 error handler

  //charge amount validation
  $("#charge_amount").change(function() {
    if( is_valid_currency( $(this)[0].value ) ) { 
      $(this).parent().parent().removeClass('has-error');
      $('#amount-error').remove();
      remove_error_reminder_if_form_valid()
    } else {
      $(this).parent().parent().addClass('has-error');
      if( !($("#amount-error").length ) ) {
        $('.form-errors-2').append("<li class='text-center' id=amount-error>charge amount must be present and must be a number</li>");
      }
    }
  });

  //last date billed validation
  $("#charge_last_date_billed").change(function() {
    if( is_valid_date( $(this)[0].value ) ) { 
      $(this).parent().removeClass('has-error');
      $('#charge-date-error').remove();
      remove_error_reminder_if_form_valid()
    } else {
      $(this).parent().addClass('has-error');
      if( !($("#charge-date-error").length ) ) {
        $('.form-errors-2').append("<li class='text-center' id=charge-date-error>last bill date must be present and must be valid (yyyy-mm-dd)</li>");
      }
    }
  });

  //BEGIN: other renewal period validation
  $('#charge_renewal_period_in_weeks').change(function() {
    var renewal_period_in_words = $('#charge_renewal_period_in_words')[0].value
    var renewal_period_in_weeks = $(this)[0].value

    if( renewal_period_in_words.value == "0" && $.isNumeric(renewal_period_in_weeks) ) {
      $(this).parent().removeClass('has-error');
      $('#renewal-weeks-error').remove();
      remove_error_reminder_if_form_valid()
    } else {
      $(this).parent().addClass('has-error');
      if( !($("#renewal-weeks-error").length ) ) {
        $('.form-errors-2').append("<li class='text-center' id=charge-date-error>other renewal period must be a number</li>");
      }
    }
  });
  $('#charge_renewal_period_in_words').change(function() {
    if( $(this).value != "0" ) {
      $('#charge_renewal_period_in_weeks').parent().removeClass('has-error');
      $('#renewal-weeks-error').remove();
      remove_error_reminder_if_form_valid()
    }
  });
  //END: other renewal period validation

  //BEGIN: form-part-2 error handler
  $('#new_charge').on('submit', function (event) {

    var amount = $("#charge_amount")[0].value;
    var last_date_billed = $('#charge_last_date_billed')[0].value;
    var renewal_period_in_words = $('#charge_renewal_period_in_words')[0].value;
    var renewal_period_in_weeks = $('#charge_renewal_period_in_weeks')[0].value;
    var errors = [];
    var error_classes = [];

    if( !is_valid_date(last_date_billed) ) { 
      errors.push("date of last bill must be present and must be a date (yyyy-mm-dd)");
      error_classes.push("charge-date-error")
      $('#charge_last_date_billed').parent().addClass('has-error');
    };

    if( !is_valid_currency(amount) ) { 
      errors.push("charge cost must be present and must be a number");
      error_classes.push("amount-error")
      $('#charge_amount').parent().parent().addClass('has-error');
    };

    if( renewal_period_in_words == "0" && !$.isNumeric(renewal_period_in_weeks) ) { 
      errors.push("other renewal period must be a number");
      error_classes.push("renewal-weeks-error")
      $('#charge_renewal_period_in_words').parent().addClass('has-error');
      $('#charge_renewal_period_in_weeks').parent().addClass('has-error');
    };

    if( errors.length > 0 ) {
      
      event.preventDefault();
      error_button_flash( $('input[name="commit"]') );
      $('#error-reminder').text("it looks like there's something wrong with the information you provided.  please fix it before continuing.");
      
      for ( var i = 0; i < errors.length; i = i + 1 ) {
        if( !($("#" + error_classes[i]).length ) ) {
          $('.form-errors-2').append("<li class='text-center' id=" + error_classes[i] + ">" + errors[i] + "</li>");
        }
      };
    
    } else {

      $('#error-reminder').text("");
    }
  });
  //END: form-part-2 error handler

  //BEGIN: autocomplete for merchant-name
  var websiteIndex = JSON.parse('#{@merchant_names_and_websites.to_json}');

  $(function() {
    $( "#charge_merchant_name" ).autocomplete({
      source: #{@merchant_names}
    });
  });

  $("#charge_merchant_name").on({
    change: function() {
      updateMerchantWebsiteText( websiteIndex[$("#charge_merchant_name")[0].value.toUpperCase()] );
    }, autocompleteselect: function( event, ui ) {
      updateMerchantWebsiteText( websiteIndex[ui.item.value.toUpperCase()] );
    }
  });
  //END: autocomplete for merchant-name

  //BEGIN: renewal period - other form
  $("#charge_renewal_period_in_words").change(function() {
    if( $(this)[0].value == "0" ) {
      $(this).css("width", "30%")
      $("#charge_renewal_period_in_weeks").css("display", "inline-block")
    } else {
      $(this).css("width", "100%")
      $("#charge_renewal_period_in_weeks").css("display", "none")
    }
  });
  //END: renewal period - other form
