-unless @linked_account.charges.present?
  .row.text-center
    .col-xs-10.col-xs-offset-1
      %h3{style: "margin: 100px;"} 
        %p We haven't find any charges in this account yet.  Check back soon! 
        =link_to "unlink account", {action: "destroy", id: @linked_account.id}, method: :delete, class: "btn btn-danger btn-md linked-account-charges-buttons", style: "z-index: 9999;", data: {confirm: "Are you sure you want to unlink this account? This can't be undone."}

-else 
  .container-fluid#edit-transaction-data-request-container
    #linked-account-charges-header  
      .row.text-center
        %p.lead{style: "margin: 20px auto 0px auto;"}
          We found 
          %span.brand-color= "#{pluralize @linked_account.charges.count, 'charge' }"
          in your account. Charges that we think you might want to track are at the top of the page.
      -if @linked_account.charges.maximum(:recurring_score) < 2
        .row
          .col-lg-offset-3.col-lg-6
            .info-box{style: "margin: 10px auto;"}
              We couldn't find any charges in your account that look likely to recur.  See if you can find any below.  We'll keep an eye on your account and let you know when we find more.
      .row.text-center
        %p.lead.without-margin
          %small
            You can edit a charge by clicking on the part of it that you want to change. For recurring charges try to correct fields marked with
            %i.fa.fa-exclamation-circle
            before proceeding.
      
      .row.text-center{style: "margin-top: 10px;"}
        .col-lg-offset-3.col-lg-6#submit-button-container
          =link_to "unlink account", {action: "destroy", id: @linked_account.id}, method: :delete, class: "btn btn-danger btn-md linked-account-charges-buttons", style: "z-index: 9999;", data: {confirm: "Are you sure you want to unlink this account? This can't be undone and all non recurring charges will be deleted"}
          =link_to charges_path, class: "btn btn-primary btn-md linked-account-charges-buttons", style: "z-index: 9999;" do 
            save and continue

    %div{style: "margin-top: 20px;"}
      -@charges.each do |grouping, grouped_charges|
        .row
          .col-xs-12
            %a.btn.btn-primary-o.btn-block.collapse-expand-button{href:"#collapse-#{grouping.downcase.gsub(" ","-")}", aria_expanded:"false", aria_controls:"collapse-#{grouping.downcase.gsub(" ","-")}", style: "margin-bottom: 10px;", class: grouped_charges.first.recurring_score > 3 ? 'active' : '', data: {toggle:"collapse"}} 
              ="#{pluralize(grouped_charges.count, 'charge')}" 
              %b= grouping
              to be recurring
              -if grouped_charges.select{ |c| c.new_transaction }.present?
                ="(#{grouped_charges.select{ |c| c.new_transaction }.count} new)"
          .col-xs-12
            .collapse{id: "collapse-#{grouping.downcase.gsub(" ","-")}", class: grouped_charges.first.recurring_score > 3 ? 'in' : ''}
              -grouped_charges.in_groups_of(3,false) do |charges|
                -charges.each do |charge|
                  %div{ class: cols_for_grouped_charges(grouped_charges, charges, charge) }
                    =render partial: "shared/charge_item", locals: {charge: charge}


  =render "shared/charge_item_script"

  :javascript
    $("[name='track-switch']:visible").bootstrapSwitch({
      onText: "Yes",
      offText: "No"
    }).on('switchChange.bootstrapSwitch', function(event, state) {
      var marginState = $(this).parent().css('margin-left')
      if ( marginState == '-48px' || marginState == '0px' ) {
        $.ajax({
          type: "PUT",
          url: "/charges/" + $(this).data("charge-id"),
          data: { charge: { recurring: state }, scan: "scan" },
          dataType: "script"
        })
      }
    });

    $(".collapse").on('show.bs.collapse', function () {
      $(this).parent().parent().find('.collapse-expand-button').addClass('active');
    });

    $(".collapse").on('shown.bs.collapse', function () {
      $(this).find("[name='track-switch']").bootstrapSwitch({
        onText: "Yes",
        offText: "No"
      }).on('switchChange.bootstrapSwitch', function(event, state) {
        var marginState = $(this).parent().css('margin-left')
        if ( marginState == '-48px' || marginState == '0px' ) {
          $.ajax({
            type: "PUT",
            url: "/charges/" + $(this).data("charge-id"),
            data: { charge: { recurring: state }, scan: "scan" },
            dataType: "script"
          })
        }
      });
    });

    $(".collapse").on('hide.bs.collapse', function () {
      $(this).parent().parent().find('.collapse-expand-button').removeClass('active');
    });

    if( $('#modal-container').find('#loading-modal').size() > 0 ){
      $(".modal-dialog").remove();
      $("#modal-container").modal('hide');
    };

